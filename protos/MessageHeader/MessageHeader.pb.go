// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: MessageHeader.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "go get github.com/gogo/protobuf"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type MessageHeader struct {
	Seq                  int32    `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Subtype              int32    `protobuf:"varint,3,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Svalue               int32    `protobuf:"varint,4,opt,name=svalue,proto3" json:"svalue,omitempty"`
	Version              int32    `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Source               string   `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageHeader) Reset()         { *m = MessageHeader{} }
func (m *MessageHeader) String() string { return proto.CompactTextString(m) }
func (*MessageHeader) ProtoMessage()    {}
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc6767fefefffecd, []int{0}
}
func (m *MessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageHeader.Unmarshal(m, b)
}
func (m *MessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageHeader.Marshal(b, m, deterministic)
}
func (m *MessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageHeader.Merge(m, src)
}
func (m *MessageHeader) XXX_Size() int {
	return xxx_messageInfo_MessageHeader.Size(m)
}
func (m *MessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MessageHeader proto.InternalMessageInfo

func (m *MessageHeader) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *MessageHeader) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MessageHeader) GetSubtype() int32 {
	if m != nil {
		return m.Subtype
	}
	return 0
}

func (m *MessageHeader) GetSvalue() int32 {
	if m != nil {
		return m.Svalue
	}
	return 0
}

func (m *MessageHeader) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *MessageHeader) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

// The request message
type EdgeRequest struct {
	Hdr *MessageHeader `protobuf:"bytes,1,opt,name=hdr,proto3" json:"hdr,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*EdgeRequest_Text
	//	*EdgeRequest_Buffer
	Payload              isEdgeRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EdgeRequest) Reset()         { *m = EdgeRequest{} }
func (m *EdgeRequest) String() string { return proto.CompactTextString(m) }
func (*EdgeRequest) ProtoMessage()    {}
func (*EdgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc6767fefefffecd, []int{1}
}
func (m *EdgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeRequest.Unmarshal(m, b)
}
func (m *EdgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeRequest.Marshal(b, m, deterministic)
}
func (m *EdgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeRequest.Merge(m, src)
}
func (m *EdgeRequest) XXX_Size() int {
	return xxx_messageInfo_EdgeRequest.Size(m)
}
func (m *EdgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeRequest proto.InternalMessageInfo

type isEdgeRequest_Payload interface {
	isEdgeRequest_Payload()
}

type EdgeRequest_Text struct {
	Text string `protobuf:"bytes,2,opt,name=text,proto3,oneof" json:"text,omitempty"`
}
type EdgeRequest_Buffer struct {
	Buffer []byte `protobuf:"bytes,3,opt,name=buffer,proto3,oneof" json:"buffer,omitempty"`
}

func (*EdgeRequest_Text) isEdgeRequest_Payload()   {}
func (*EdgeRequest_Buffer) isEdgeRequest_Payload() {}

func (m *EdgeRequest) GetPayload() isEdgeRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *EdgeRequest) GetHdr() *MessageHeader {
	if m != nil {
		return m.Hdr
	}
	return nil
}

func (m *EdgeRequest) GetText() string {
	if x, ok := m.GetPayload().(*EdgeRequest_Text); ok {
		return x.Text
	}
	return ""
}

func (m *EdgeRequest) GetBuffer() []byte {
	if x, ok := m.GetPayload().(*EdgeRequest_Buffer); ok {
		return x.Buffer
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EdgeRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EdgeRequest_Text)(nil),
		(*EdgeRequest_Buffer)(nil),
	}
}

// The response message
type EdgeResponse struct {
	Hdr *MessageHeader `protobuf:"bytes,1,opt,name=hdr,proto3" json:"hdr,omitempty"`
	Rc  int32          `protobuf:"varint,2,opt,name=rc,proto3" json:"rc,omitempty"`
	// Types that are valid to be assigned to Message:
	//	*EdgeResponse_Text
	//	*EdgeResponse_Buffer
	Message              isEdgeResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *EdgeResponse) Reset()         { *m = EdgeResponse{} }
func (m *EdgeResponse) String() string { return proto.CompactTextString(m) }
func (*EdgeResponse) ProtoMessage()    {}
func (*EdgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc6767fefefffecd, []int{2}
}
func (m *EdgeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeResponse.Unmarshal(m, b)
}
func (m *EdgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeResponse.Marshal(b, m, deterministic)
}
func (m *EdgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeResponse.Merge(m, src)
}
func (m *EdgeResponse) XXX_Size() int {
	return xxx_messageInfo_EdgeResponse.Size(m)
}
func (m *EdgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeResponse proto.InternalMessageInfo

type isEdgeResponse_Message interface {
	isEdgeResponse_Message()
}

type EdgeResponse_Text struct {
	Text string `protobuf:"bytes,3,opt,name=text,proto3,oneof" json:"text,omitempty"`
}
type EdgeResponse_Buffer struct {
	Buffer []byte `protobuf:"bytes,4,opt,name=buffer,proto3,oneof" json:"buffer,omitempty"`
}

func (*EdgeResponse_Text) isEdgeResponse_Message()   {}
func (*EdgeResponse_Buffer) isEdgeResponse_Message() {}

func (m *EdgeResponse) GetMessage() isEdgeResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *EdgeResponse) GetHdr() *MessageHeader {
	if m != nil {
		return m.Hdr
	}
	return nil
}

func (m *EdgeResponse) GetRc() int32 {
	if m != nil {
		return m.Rc
	}
	return 0
}

func (m *EdgeResponse) GetText() string {
	if x, ok := m.GetMessage().(*EdgeResponse_Text); ok {
		return x.Text
	}
	return ""
}

func (m *EdgeResponse) GetBuffer() []byte {
	if x, ok := m.GetMessage().(*EdgeResponse_Buffer); ok {
		return x.Buffer
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EdgeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EdgeResponse_Text)(nil),
		(*EdgeResponse_Buffer)(nil),
	}
}

func init() {
	proto.RegisterType((*MessageHeader)(nil), "rpc.MessageHeader")
	proto.RegisterType((*EdgeRequest)(nil), "rpc.EdgeRequest")
	proto.RegisterType((*EdgeResponse)(nil), "rpc.EdgeResponse")
}

func init() { proto.RegisterFile("MessageHeader.proto", fileDescriptor_bc6767fefefffecd) }

var fileDescriptor_bc6767fefefffecd = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0x9b, 0x3f, 0x4d, 0xe9, 0xb4, 0x4a, 0x1d, 0x45, 0x16, 0x4f, 0x25, 0x78, 0xe8, 0xc5,
	0x1c, 0xea, 0xd5, 0x53, 0x41, 0xc8, 0xc5, 0xcb, 0xf6, 0x09, 0x92, 0xcd, 0xb4, 0x16, 0x6a, 0x76,
	0xbb, 0x9b, 0x04, 0x7b, 0xf2, 0x39, 0x7c, 0x5b, 0xc9, 0x24, 0x4a, 0x8b, 0x08, 0xde, 0xe6, 0xfb,
	0x0d, 0x93, 0xf9, 0x32, 0x0b, 0xd7, 0x2f, 0xe4, 0x5c, 0xb6, 0xa5, 0x94, 0xb2, 0x82, 0x6c, 0x62,
	0xac, 0xae, 0x34, 0x06, 0xd6, 0xa8, 0xf8, 0xd3, 0x83, 0x8b, 0xb3, 0x26, 0xce, 0x20, 0x70, 0x74,
	0x10, 0xde, 0xdc, 0x5b, 0x0c, 0x65, 0x5b, 0x22, 0x42, 0x58, 0x1d, 0x0d, 0x09, 0x9f, 0x23, 0xae,
	0x51, 0xc0, 0xc8, 0xd5, 0x39, 0xc7, 0x01, 0xc7, 0xdf, 0x88, 0xb7, 0x10, 0xb9, 0x26, 0xdb, 0xd7,
	0x24, 0x42, 0x6e, 0xf4, 0xd4, 0x4e, 0x34, 0x64, 0xdd, 0x4e, 0x97, 0x62, 0xd8, 0x4d, 0xf4, 0xc8,
	0x13, 0xba, 0xb6, 0x8a, 0x44, 0x34, 0xf7, 0x16, 0x63, 0xd9, 0x53, 0x5c, 0xc2, 0xe4, 0xb9, 0xd8,
	0x92, 0xa4, 0x43, 0x4d, 0xae, 0xc2, 0x7b, 0x08, 0x5e, 0x0b, 0xcb, 0x62, 0x93, 0x25, 0x26, 0xd6,
	0xa8, 0xe4, 0xcc, 0x5c, 0xb6, 0x6d, 0xbc, 0x81, 0xb0, 0xa2, 0xf7, 0x8a, 0x65, 0xc7, 0xe9, 0x40,
	0x32, 0xa1, 0x80, 0x28, 0xaf, 0x37, 0x1b, 0xb2, 0x6c, 0x3b, 0x4d, 0x07, 0xb2, 0xe7, 0xd5, 0x18,
	0x46, 0x26, 0x3b, 0xee, 0x75, 0x56, 0xc4, 0x1f, 0x30, 0xed, 0xf6, 0x39, 0xa3, 0x4b, 0x47, 0xff,
	0x5c, 0x78, 0x09, 0xbe, 0x55, 0xfd, 0x6d, 0x7c, 0xab, 0x7e, 0x04, 0x82, 0x3f, 0x04, 0xc2, 0xdf,
	0x02, 0x6f, 0xdd, 0x57, 0x97, 0x4f, 0xdd, 0x0f, 0xaf, 0xc9, 0x36, 0x3b, 0x45, 0xf8, 0x00, 0xe1,
	0x9a, 0xca, 0x02, 0x67, 0xbc, 0xfa, 0xe4, 0x14, 0x77, 0x57, 0x27, 0x49, 0x27, 0x1b, 0x0f, 0x56,
	0x7e, 0xea, 0xe5, 0x11, 0x3f, 0xed, 0xe3, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0x3f, 0x25,
	0x88, 0xf1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EdgeServiceClient is the client API for EdgeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EdgeServiceClient interface {
	// Sends message to Edge via gRPC
	Send(ctx context.Context, in *EdgeRequest, opts ...grpc.CallOption) (*EdgeResponse, error)
}

type edgeServiceClient struct {
	cc *grpc.ClientConn
}

func NewEdgeServiceClient(cc *grpc.ClientConn) EdgeServiceClient {
	return &edgeServiceClient{cc}
}

func (c *edgeServiceClient) Send(ctx context.Context, in *EdgeRequest, opts ...grpc.CallOption) (*EdgeResponse, error) {
	out := new(EdgeResponse)
	err := c.cc.Invoke(ctx, "/rpc.EdgeService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EdgeServiceServer is the server API for EdgeService service.
type EdgeServiceServer interface {
	// Sends message to Edge via gRPC
	Send(context.Context, *EdgeRequest) (*EdgeResponse, error)
}

// UnimplementedEdgeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEdgeServiceServer struct {
}

func (*UnimplementedEdgeServiceServer) Send(ctx context.Context, req *EdgeRequest) (*EdgeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterEdgeServiceServer(s *grpc.Server, srv EdgeServiceServer) {
	s.RegisterService(&_EdgeService_serviceDesc, srv)
}

func _EdgeService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EdgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.EdgeService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeServiceServer).Send(ctx, req.(*EdgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EdgeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.EdgeService",
	HandlerType: (*EdgeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _EdgeService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "MessageHeader.proto",
}
